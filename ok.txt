create database fmc;

use fmc;

create table Club(ClubID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL UNIQUE, EstablishmentDate date NOT NULL, PRIMARY KEY(ClubID));

create table Placeholders(PostholderID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL, Post VARCHAR(100) NOT NULL, Contact VARCHAR(100) NOT NULL, Branch VARCHAR(100) NOT NULL, Batch INT NOT NULL,ClubID INT NOT NULL, PRIMARY KEY(PostholderID),FOREIGN KEY(ClubID) references Club(ClubID) ON DELETE CASCADE ON UPDATE CASCADE);

create table Members(MemberID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL, Contact VARCHAR(100) NOT NULL, Branch VARCHAR(100) NOT NULL, Batch INT NOT NULL, PRIMARY KEY(MemberID));

create table Alumni(AlumniID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL, Branch VARCHAR(100) NOT NULL, Contact VARCHAR(100) NOT NULL, Batch INT NOT NULL, Post VARCHAR(100) NOT NULL, ClubID INT NOT NULL, PRIMARY KEY(AlumniID), FOREIGN KEY(ClubID) references Club(ClubID) ON DELETE CASCADE ON UPDATE CASCADE);

create table Sponsors(SponsorID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL, Contact VARCHAR(100) NOT NULL, Organisation VARCHAR(100) NOT NULL, PRIMARY KEY(SponsorID));

create table Funds(FundID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL, Contact VARCHAR(100) NOT NULL, Amount INT NOT NULL, AlumniID INT NOT NULL, SponsorID INT NOT NULL, PRIMARY KEY(FundID), FOREIGN KEY(AlumniID) references Alumni(AlumniID) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY(SponsorID) references Sponsors(SponsorID) ON DELETE CASCADE ON UPDATE CASCADE);

create table Events(EventID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL, Venue VARCHAR(100) NOT NULL, Time datetime NOT NULL, ClubID INT NOT NULL, PRIMARY KEY(EventID), FOREIGN KEY(ClubID) references Club(ClubID) ON DELETE CASCADE ON UPDATE CASCADE);

create table Mentors(MentorID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL, Contact VARCHAR(100) NOT NULL,ClubID INT NOT NULL, PRIMARY KEY(MentorID), FOREIGN KEY(ClubID) references Club(ClubID));

create table Participants(ParticipantID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL, Contact VARCHAR(100) NOT NULL, PRIMARY KEY(ParticipantID));

create table Merchandise(MerchandiseID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL, Price INT NOT NULL, Quantity INT NOT NULL, Contact VARCHAR(100) NOT NULL,ClubID INT NOT NULL, PRIMARY KEY(MerchandiseID), FOREIGN KEY(ClubID) references Club(ClubID) ON DELETE CASCADE ON UPDATE CASCADE);

create table Resources(ResourceID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(100) NOT NULL, Specifications VARCHAR(300), Cost INT NOT NULL, PRIMARY KEY(ResourceID));

create table used(EventID INT NOT NULL, FundID INT NOT NULL, PRIMARY KEY(EventID,FundID), FOREIGN KEY(EventID) references Events(EventID), FOREIGN KEY(FundID) references Funds(FundID));

create table profit(MerchandiseID INT NOT NULL, FundID INT NOT NULL, PRIMARY KEY(MerchandiseID,FundID), FOREIGN KEY(MerchandiseID) references Merchandise(MerchandiseID), FOREIGN KEY(FundID) references Funds(FundID));

create table participate(EventID INT NOT NULL, ParticipantID INT NOT NULL, PRIMARY KEY(EventID,ParticipantID), FOREIGN KEY(EventID) references Events(EventID), FOREIGN KEY(ParticipantID) references Participants(ParticipantID));

create table belong_of(MemberID INT NOT NULL, ClubID INT NOT NULL, PRIMARY KEY(MemberID,ClubID), FOREIGN KEY(MemberID) references Members(MemberID), FOREIGN KEY(ClubID) references Club(ClubID));

create table selected_by(MentorID INT NOT NULL, PostholderID INT NOT NULL, PRIMARY KEY(MentorID,PostholderID), FOREIGN KEY(MentorID) references Mentors(MentorID), FOREIGN KEY(PostholderID) references Placeholders(PostholderID));

create table consists_of(ResourceID INT NOT NULL, ClubID INT NOT NULL, PRIMARY KEY(ResourceID,ClubID), FOREIGN KEY(ResourceID) references Resources(ResourceID), FOREIGN KEY(ClubID) references Club(ClubID));
